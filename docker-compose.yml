services:
  # nginx:
  #   image: nginx:stable-alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf  # Путь к конфигурации для проксирования
  #   depends_on:
  #     - backend
  #   networks:
  #     - dev
  
  db:
    image: mysql:8.0
    container_name: db
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10
    environment: #TODO upd to .env
      MYSQL_ROOT_PASSWORD: ${password}
      MYSQL_DATABASE: ${db}
      MYSQL_USER: ${user}
      MYSQL_PASSWORD: ${password}
    ports:
      - "127.0.0.2:3306:3306"
    volumes:
      - ./data/db:/var/lib/mysql
    networks:
      - dev

  backend:
    build: ./backend
    restart: always
    environment:
      host: ${host}
      user: ${user}
      password: ${password}
      db: ${db}
      port: ${port}
      secret: ${secret}
      API_KEY: ${API_KEY}
      TOKEN: ${TOKEN}
      ADMIN_CHAT_ID: ${ADMIN_CHAT_ID}
      ADMIN_TOKEN: ${ADMIN_TOKEN}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "127.0.0.2:8000:8000"
    networks: 
      - dev


  frontend:
    restart: always
    build: ./frontend
    ports:
      - "127.0.0.2:8001:8001"
    networks:
      - dev

networks:
  dev:
    driver: bridge
